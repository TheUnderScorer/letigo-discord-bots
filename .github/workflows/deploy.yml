name: Deploy
on:
  release:
    types:
      - published

jobs:
  deploy-lambdas:
    name: Deploy lambdas
    needs:
      - get-data
    environment: production
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: eu-west-1

      - uses: actions/setup-node@v1
        with:
          node-version: 16.x

      - run: npm ci && npm i serverless@3 ts-node -g

      - name: Register commands
        run: ts-node scripts/registerCommands.ts
        env:
          APP_ID: ${{ secrets.APP_ID }}
          GUILD_ID: ${{ secrets.GUILD_ID }}
          DAILY_REPORT_CHANNEL_ID: ${{ secrets.DAILY_REPORT_CHANNEL_ID }}
          DAILY_REPORT_TARGET_USER_ID: ${{ secrets.DAILY_REPORT_TARGET_USER_ID }}
          BOT_TOKEN: ${{ secrets.BOT_TOKEN }}
          PUBLIC_KEY: ${{ secrets.PUBLIC_KEY }}

      - name: serverless deploy
        run: npm run deploy
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          APP_ID: ${{ secrets.APP_ID }}
          GUILD_ID: ${{ secrets.GUILD_ID }}
          DAILY_REPORT_CHANNEL_ID: ${{ secrets.DAILY_REPORT_CHANNEL_ID }}
          DAILY_REPORT_TARGET_USER_ID: ${{ secrets.DAILY_REPORT_TARGET_USER_ID }}
          BOT_TOKEN: ${{ secrets.BOT_TOKEN }}
          PUBLIC_KEY: ${{ secrets.PUBLIC_KEY }}
