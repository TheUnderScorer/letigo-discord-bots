name: Release
on:
  workflow_dispatch:


env:
  GO_VERSION: 1.24

jobs:
  detect-modules:
    runs-on: ubuntu-latest
    outputs:
      modules: ${{ steps.set-modules.outputs.modules }}
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-go@v5
        with:
          go-version: ${{ env.GO_VERSION }}
      - id: set-modules
        run: echo "modules=$(go list -m -json | jq -s '.' | jq -c '[.[].Dir]')" >> $GITHUB_OUTPUT
  golangci-lint:
    needs: detect-modules
    runs-on: ubuntu-latest
    strategy:
      matrix:
        modules: ${{ fromJSON(needs.detect-modules.outputs.modules) }}
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-go@v5
        with:
          go-version: ${{ env.GO_VERSION }}
      - name: golangci-lint ${{ matrix.modules }}
        uses: golangci/golangci-lint-action@v6
        with:
          version: v1.60
          working-directory: ${{ matrix.modules }}
  release:
    needs: golangci-lint
    name: Build & Release
    runs-on: ubuntu-latest

    steps:
      - name: Check Commit Type
        uses: gsactions/commit-message-checker@v1
        with:
          pattern: '^((?!skip ci).)*$'
          flags: 's'
          error: 'Skipping for release commit.'

      - uses: actions/checkout@v2
        with:
          persist-credentials: false

      - name: Install Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 19

      - name: Install npm dependencies
        run: |
          npm ci

      - name: Build
        run: go build src/main.go

      - name: Test
        run: go test app

      - name: Release
        env:
          GITHUB_TOKEN: ${{ secrets.GH_RELEASE_TOKEN }}
          HUSKY: 0
        run: npx semantic-release
