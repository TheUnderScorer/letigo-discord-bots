service: wojciech-discord-bot

plugins:
  - serverless-vpc-plugin
  - serverless-webpack
  - serverless-offline
  - serverless-domain-manager
  - serverless-fargate

frameworkVersion: '3'
useDotenv: true

provider:
  name: aws
  runtime: nodejs14.x
  region: eu-west-1
  stage: ${opt:stage, 'development'}
  logRetentionInDays: 30
  ecr:
    scanOnPush: false
    images:
      server:
        file: ./docker/server/Dockerfile
        path: .

fargate:
  memory: '0.5GB'
  cpu: 256
  vpc:
    assignPublicIp: true
    subnetIds:
      - !Ref AppSubnet1
      - !Ref AppSubnet2

  tasks:
    server:
      name: ${self:service}-${self:provider.stage}-wojciech-discord-bot-server
      image: server
      service:
        desiredCount: 1
      environment:
        STAGE: ${self:provider.stage}
        BOT_TOKEN: ${self:custom.botToken.${self:provider.stage}}

functions:
  handleInteractions:
    memorySize: 128
    handler: src/lambdas/functions/handleInteractions.default
    environment:
      STAGE: ${self:provider.stage}
      BOT_TOKEN: ${self:custom.botToken.${self:provider.stage}}
      PUBLIC_KEY: ${self:custom.publicKey.${self:provider.stage}}
    events:
      - http:
          path: /interactions
          method: post
          cors: true

  dailyGreeting:
    memorySize: 128
    handler: src/lambdas/functions/dailyGreeting.default
    environment:
      STAGE: ${self:provider.stage}
      BOT_TOKEN: ${self:custom.botToken.${self:provider.stage}}
      GREETING_CHANNEL_ID: ${self:custom.greetingChannelId.${self:provider.stage}}
    events:
      # Invoke daily at 7:00 UTC
      - schedule: cron(0 7 * * ? *)

  ravuttoDailyReportReminder:
    memorySize: 128
    handler: src/lambdas/functions/ravuttoDailyReportReminder.default
    environment:
      STAGE: ${self:provider.stage}
      BOT_TOKEN: ${self:custom.botToken.${self:provider.stage}}
      DAILY_REPORT_CHANNEL_ID: ${self:custom.dailyReportChannelId.${self:provider.stage}}
      MESSAGE_TO_SEND: '{{MENTION}} kolego, ale pamiÄ™taj o daily raporcie dzisiaj'
      DAILY_REPORT_TARGET_USER_ID: ${self:custom.dailyReportTargetUserId.${self:provider.stage}}
    events:
      # Invoke daily at 14:00 UTC
      - schedule: cron(0 14 * * ? *)

  ravuttoDailyReportMissing:
    memorySize: 128
    handler: src/lambdas/functions/ravuttoDailyReportReminder.default
    environment:
      STAGE: ${self:provider.stage}
      BOT_TOKEN: ${self:custom.botToken.${self:provider.stage}}
      DAILY_REPORT_CHANNEL_ID: ${self:custom.dailyReportChannelId.${self:provider.stage}}
      DAILY_REPORT_TARGET_USER_ID: ${self:custom.dailyReportTargetUserId.${self:provider.stage}}
      MESSAGE_TO_SEND: '{{MENTION}} kolego, a gdzie daily raport?'
    events:
      # Invoke daily at 21:00 UTC
      - schedule: cron(0 21 * * ? *)

custom:
  vpcConfig:
    cidrBlock: '10.0.0.0/16'
    createDbSubnet: false
    exportOutputs: true
    createNatInstance: false
    zones:
      - eu-west-1a
      - eu-west-1b
  customDomain:
    domainName: ${self:custom.apiDomainName.${self:provider.stage}}
    stage: ${self:provider.stage}
    certificateArn: 'arn:aws:acm:eu-west-1:086627185220:certificate/8ad9b636-a8bf-4bc6-be90-f7fab54913d0'
    createRoute53Record: true
    endpointType: 'regional'
    securityPolicy: tls_1_2
    apiType: rest
    autoDomain: false
  webpack:
    webpackConfig: webpack.config.js
  stages:
    - development
    - staging
    - production
  apiDomainName:
    development: wojciech-discord-bot-dev.przemyslawzydek.com
    production: wojciech-discord-bot.przemyslawzydek.com
  botToken:
    development: ${env:BOT_TOKEN, ''}
    production: ${ssm:/wojciech_discord_bot/bot_token}
  dailyReportChannelId:
    development: ${env:DAILY_REPORT_CHANNEL_ID, ''}
    production: ${ssm:/wojciech_discord_bot/daily_report_channel_id}
  dailyReportTargetUserId:
    development: ${env:DAILY_REPORT_TARGET_USER_ID, ''}
    production: ${ssm:/wojciech_discord_bot/daily_report_target_user_id}
  publicKey:
    development: ${env:PUBLIC_KEY, ''}
    production: ${ssm:/wojciech_discord_bot/public_key}
  greetingChannelId:
    development: ${env:GREETING_CHANNEL_ID, ''}
    production: ${ssm:/wojciech_discord_bot/greeting_channel_id}
